/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick-tap-ms = <105>;
            require-prior-idle-ms = <120>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick-tap-ms = <105>;
            require-prior-idle-ms = <120>;
            flavor = "balanced";
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp GRAVE          &kp N1           &kp N2           &kp N3             &kp N4               &kp N5                                   &kp N6  &kp N7                &kp N8              &kp N9            &kp N0               &kp MINUS
&kp TAB            &kp Q            &kp W            &kp E              &kp R                &kp T                                    &kp Y   &kp U                 &kp I               &kp O             &kp P                &kp BSLH
&hml LCTRL ESCAPE  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LEFT_CONTROL F  &kp G                                    &kp H   &hmr RIGHT_CONTROL J  &hmr RIGHT_SHIFT K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMI  &kp APOS
&kp LSHFT          &kp Z            &kp X            &kp C              &kp V                &kp B     &kp K_MUTE    &rgb_ug RGB_TOG  &kp N   &kp M                 &kp COMMA           &kp DOT           &kp FSLH             &kp EQUAL
                                    &trans           &trans             &kp LALT             &kp LGUI  &kp SPACE     &kp ENTER        &mo 1   &kp BACKSPACE         &trans              &to 3
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp C_BRIGHTNESS_DEC C_BRIGHTNESS_INC>;
        };

        layer_1 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                    &kp F7    &kp F8         &kp F9       &kp F10    &kp F11        &kp F12
&trans  &trans  &trans  &trans  &trans  &trans                    &kp END   &kp PAGE_DOWN  &kp PAGE_UP  &kp HOME   &kp BACKSPACE  &kp LBKT
&trans  &trans  &trans  &trans  &trans  &trans                    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp ENTER      &kp RBKT
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans         &trans       &trans     &trans         &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans    &to 2          &trans       &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans          &trans          &trans          &trans           &trans                             &trans         &kp N7  &kp N8   &kp N9     &kp STAR   &trans
&trans  &trans          &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &trans                             &trans         &kp N4  &kp N5   &kp N6     &kp PLUS   &trans
&trans  &msc SCRL_LEFT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_RIGHT                    &kp BACKSPACE  &kp N1  &kp N2   &kp N3     &kp MINUS  &trans
&trans  &trans          &msc SCRL_UP    &msc SCRL_DOWN  &trans           &trans           &trans    &trans  &trans         &kp N0  &kp DOT  &kp EQUAL  &kp FSLH   &trans
                        &trans          &trans          &trans           &trans           &trans    &trans  &trans         &to 0   &trans   &trans
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD                   &rgb_ug RGB_BRI                 &rgb_ug RGB_BRD
&trans      &trans        &trans        &trans        &trans        &trans                          &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_EFF  &rgb_ug RGB_COLOR_HSB(86,51,68)   &rgb_ug RGB_COLOR_HSB(0,0,100)  &rgb_ug RGB_COLOR_HSB(198,70,70)
&trans      &trans        &trans        &trans        &trans        &trans                          &trans           &trans           &trans           &rgb_ug RGB_COLOR_HSB(279,68,72)  &trans                          &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans           &trans           &trans           &trans                            &trans                          &trans
                          &trans        &trans        &trans        &trans        &trans    &trans  &trans           &trans           &trans           &to 0
            >;
        };
    };
};
